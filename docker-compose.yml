version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - FORCE_COLOR=1
      - HYPERCORN_WORKER_CLASS=asyncio
      - HYPERCORN_WORKERS=2
      - HYPERCORN_BIND=0.0.0.0:8000
      - HYPERCORN_ACCESS_LOG=-
      - HYPERCORN_ERROR_LOG=-
      - HYPERCORN_LOG_LEVEL=INFO
      # Add your other environment variables here
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-nedlia}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
    depends_on:
      - db
    networks:
      - nedlia-network
    volumes:
      - ./app:/app/app:ro  # Read-only mount for code
      - ./scripts:/app/scripts:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${DB_NAME:-nedlia}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nedlia-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  nedlia-network:
    driver: bridge

volumes:
  postgres_data:
