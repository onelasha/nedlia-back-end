[tool.poetry]
name = "nedlia-backend"
version = "0.1.0"
description = "A DDD-based microservice following Clean Architecture principles"
authors = ["Nedlia Team"]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.0"
uvicorn = "^0.24.0"
pydantic = "^2.4.2"
pydantic-settings = "^2.0.3"
sqlalchemy = "^2.0.23"
alembic = "^1.12.1"
psycopg2-binary = "^2.9.9"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"
tenacity = "^8.2.3"
redis = "^5.0.1"
prometheus-client = "^0.18.0"
structlog = "^23.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.1"
black = "^23.10.1"
isort = "^5.12.0"
mypy = "^1.6.1"
flake8 = "^6.1.0"
pre-commit = "^3.5.0"
httpx = "^0.25.1"

[tool.poetry.scripts]
start = "uvicorn app.presentation.api.v1.main:app --host 0.0.0.0 --port 8000"
dev = "uvicorn app.presentation.api.v1.main:app --host 0.0.0.0 --port 8000 --reload"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v -s --cov=app --cov-report=term-missing"
asyncio_mode = "auto"
